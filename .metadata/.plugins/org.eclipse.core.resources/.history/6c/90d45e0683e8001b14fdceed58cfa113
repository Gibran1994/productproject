import java.util.Arrays;
import java.util.function.Supplier;



import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponentsBuilder;



import com.uni.scrapwagon.model.TenantDetailsModel;
import com.uni.scrapwagon.repository.TenantDetailsRepository;



import org.springframework.web.client.HttpClientErrorException.BadRequest;



@Service
public class AuthServiceProvider {

@Autowired
RestTemplate restTemplate;

@Autowired
TenantDetailsRepository tenantRepo;

Supplier<TenantDetailsModel> tenantDetailsSupplier = () -> tenantRepo.findAll().get(0);


public void verifyToken(String token, String loginId) {
try {
TenantDetailsModel tenantDetails = tenantDetailsSupplier.get();
System.out.println("tenant id "+tenantDetails.getTenantId()+"\ntenant Password "+tenantDetails.getTenantPassword());
HttpHeaders headers = new HttpHeaders();
headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
// String url = "http://localhost:8081/authorize/user/verify";
// UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url)
// .queryParam("token", token)
// .queryParam("login_id", loginId)
// .queryParam("tenant_id", tenantDetails.getTenantId())
// .queryParam("tenant_password", tenantDetails.getTenantPassword())
// .queryParam("token_type", "access");
String tenantId = tenantDetails.getTenantId();
String tenantPassword = tenantDetails.getTenantPassword();
HttpEntity<?> entity = new HttpEntity<>(headers);
String res = restTemplate.exchange("http://localhost:8081/authorize/user/verify?token={token}&login_id={loginId}&tenant_id={tenantId}&tenant_password={tenantPassword}&token_type=access", HttpMethod.GET,
entity, String.class,token,loginId,tenantId,tenantPassword).getBody();
System.out.println(res);
// return new ResponseEntity<Object>(res, HttpStatus.OK);
}catch(BadRequest e) {

}
}
}